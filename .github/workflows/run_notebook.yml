name: Run Jupyter Notebook

on:
  push:
    paths:
      - 'notebooks/**'
      - '.github/workflows/run_notebook.yml'
  pull_request:
    paths:
      - 'notebooks/**'
  workflow_dispatch:

jobs:
  run-notebook:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nbconvert
        
    - name: Prepare zeros data
      run: |
        if [ ! -s "zeros/zeros_t1e8.txt" ]; then
          echo "Preparing zeros file..."
          python utils/fetch_odlyzko.py || echo "Using existing data"
        fi
        
    - name: Execute notebook
      run: |
        echo "üî¨ Executing validation notebook..."
        cd notebooks
        jupyter nbconvert --to notebook --execute --ExecutePreprocessor.timeout=600 validation.ipynb --output validation_executed.ipynb
        
    - name: Convert notebook to HTML
      run: |
        cd notebooks  
        jupyter nbconvert --to html validation_executed.ipynb --output ../docs/notebook_results.html
        
    - name: Extract results from notebook
      run: |
        echo "üìä Extracting results from notebook..."
        python -c "
import json
import re

# Read the executed notebook
with open('notebooks/validation_executed.ipynb', 'r') as f:
    nb = json.load(f)

print('Notebook execution results:')
print('=' * 40)

# Look for output cells
for cell in nb['cells']:
    if cell['cell_type'] == 'code' and 'outputs' in cell:
        for output in cell['outputs']:
            if 'text' in output:
                text = ''.join(output['text'])
                if 'prime+A=' in text or 'err=' in text:
                    print(text.strip())
            elif 'name' in output and output['name'] == 'stdout':
                text = ''.join(output['text'])
                if 'prime+A=' in text or 'err=' in text:
                    print(text.strip())
"
        
    - name: Check notebook results
      run: |
        python -c "
import json
import sys

try:
    with open('notebooks/validation_executed.ipynb', 'r') as f:
        nb = json.load(f)
    
    # Check if notebook ran successfully
    has_output = False
    has_errors = False
    
    for cell in nb['cells']:
        if cell['cell_type'] == 'code' and 'outputs' in cell:
            for output in cell['outputs']:
                if output.get('output_type') == 'error':
                    print(f'‚ùå Notebook error: {output.get(\"ename\", \"Unknown error\")}')
                    has_errors = True
                elif 'text' in output or ('data' in output and 'text/plain' in output['data']):
                    has_output = True
    
    if has_errors:
        print('‚ùå Notebook execution failed')
        sys.exit(1)
    elif has_output:
        print('‚úÖ Notebook executed successfully')
    else:
        print('‚ö†Ô∏è Notebook ran but produced no output')
        
except Exception as e:
    print(f'‚ùå Error checking notebook: {e}')
    sys.exit(1)
"
        
    - name: Upload notebook results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: notebook-results
        path: |
          notebooks/validation_executed.ipynb
          docs/notebook_results.html