name: Comprehensive Process Validation

on:
  push:
    branches:
      - main
    paths:
      - '**/*.py'
      - 'notebooks/*.ipynb'
      - 'requirements.txt'
  pull_request:
    branches:
      - main
  workflow_dispatch: # Manual trigger

env:
  PRIME_COUNT: 50
  PRIME_POWERS: 3
  ZERO_COUNT: 50
  INTEGRATION_T: 5
  PRECISION_DPS: 15

jobs:
  validate-all-processes:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nbconvert pytest
          
      - name: Create necessary directories
        run: |
          mkdir -p data logs docs
          
      - name: Run comprehensive process validation
        run: |
          python validate_all_processes.py
          
      - name: Generate summary report
        if: always()
        run: |
          echo "## Process Validation Summary" > process_summary.md
          echo "Date: $(date)" >> process_summary.md
          echo "" >> process_summary.md
          if [ -f logs/process_validation.log ]; then
            echo "### Results" >> process_summary.md
            cat logs/process_validation.log >> process_summary.md
          fi
          
      - name: Upload validation artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: process-validation-results
          path: |
            logs/process_validation.log
            data/validation_results.csv
            process_summary.md
          retention-days: 30
          
      - name: Check process health
        run: |
          if [ -f logs/process_validation.log ]; then
            if grep -q "All processes are working correctly!" logs/process_validation.log; then
              echo "✅ All computational processes are healthy and operational"
            else
              echo "⚠️ Some processes may need attention - check artifacts for details"
            fi
          fi