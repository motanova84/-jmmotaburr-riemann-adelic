name: Build and Validate

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Increased job timeout for robustness
    steps:
      - uses: actions/checkout@v4  # Use latest version for consistency
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Setup Environment
        run: |
          mkdir -p zeros docs logs
          # Verify zeros file exists in repository - no external downloads needed
          if [ -f zeros/zeros_t1e8.txt ]; then
            echo "✅ Found zeros_t1e8.txt in repository ($(wc -l < zeros/zeros_t1e8.txt) lines)"
          else
            echo "❌ Warning: zeros_t1e8.txt not found in repo. Consider adding it manually."
          fi
          sudo apt-get update -qq  # Quiet mode for cleaner logs
          sudo apt-get install -y texlive-latex-base texlive-latex-recommended
          pip install -r requirements.txt
          pip install nbconvert jupyter mpmath sympy numpy requests pytest
      - name: Compile LaTeX
        run: |
          cd paper
          pdflatex -interaction=nonstopmode main.tex || echo "LaTeX compilation encountered issues but continuing"
      - name: Execute Notebook with Optimized Timeout
        run: |
          export PYTHONUNBUFFERED=1
          export PRIME_COUNT=100
          export PRIME_POWERS=5  # Added from copilot branch
          export ZERO_COUNT=100
          export INTEGRATION_T=10
          mkdir -p docs logs
          # Try the notebook execution with detailed logging
          jupyter nbconvert --to html --execute --ExecutePreprocessor.timeout=1800 \
            --ExecutePreprocessor.kernel_name=python3 \
            notebooks/validation.ipynb --output-dir docs --output validation.html > logs/build.log 2>&1 || \
          {
            echo "Complex notebook timed out, trying simpler validation notebook as fallback..." | tee -a logs/build.log
            jupyter nbconvert --to html --execute --ExecutePreprocessor.timeout=300 \
              --ExecutePreprocessor.kernel_name=python3 \
              validation.ipynb --output-dir docs --output validation.html >> logs/build.log 2>&1 || \
            {
              echo "Both notebooks failed, using CLI validation instead..." | tee -a logs/build.log
              echo "<h1>Riemann Validation Results</h1>" > docs/validation.html
              echo "<p>Notebook execution failed, CLI validation results:</p>" >> docs/validation.html
              echo "<pre>" >> docs/validation.html
              python validate_explicit_formula.py --max_primes 100 --max_zeros 100 >> docs/validation.html 2>&1 || true
              echo "</pre>" >> docs/validation.html
              echo "CLI validation completed as fallback" | tee -a logs/build.log
            }
          }
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4  # Updated from v3 to v4
        if: always()  # Ensure artifacts are uploaded even on failure
        with:
          name: paper-output
          path: |
            paper/main.pdf
            docs/validation.html
            logs/build.log
          retention-days: 30  # Added from copilot branch for better artifact management
      - name: Check Execution Time and Errors
        if: failure()
        run: |
          echo "Execution failed. Check logs for details."
          ls -la docs/ || echo "Docs directory empty"
          ls -la logs/ || echo "Logs directory empty"
          echo "=== Build Log Contents ==="
          cat logs/build.log 2>/dev/null || echo "Build log not generated"
          echo "=== HTML Status ==="
          cat docs/validation.html 2>/dev/null | head -20 || echo "HTML not generated or empty"