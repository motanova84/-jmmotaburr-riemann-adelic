name: Riemann-Adelic CI/CD

on:
  push:
    branches:
      - main
    paths:
      - '**/*.py'
      - 'notebooks/*.ipynb'
      - 'requirements.txt'
      - 'zeros/*.txt'
  pull_request:
    branches:
      - main
  workflow_dispatch: # Manual trigger option

env:
  PRIME_COUNT: 100
  PRIME_POWERS: 5
  ZERO_COUNT: 100
  INTEGRATION_T: 10
  PRECISION_DPS: 25

jobs:
  # Job 1: Setup and Install Dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nbconvert pytest

  # Job 2: Validate and Fetch Zero Data
  validate-data:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Fetch Odlyzko zeros if missing
        run: |
          if [ ! -f zeros/zeros_t1e8.txt ]; then
            curl -L -o zeros/zeros_t1e8.txt.gz https://www-users.cse.umn.edu/~odlyzko/zeta_tables/zeros1.gz
            gunzip zeros/zeros_t1e8.txt.gz
          fi
      - name: Validate zeros checksum
        run: python utils/checksum_zeros.py

  # Job 3: Run Validation Script
  run-validation:
    needs: [setup, validate-data]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run validation script
        run: |
          mkdir -p logs data
          python validate_explicit_formula.py \
            --max_primes $PRIME_COUNT \
            --max_zeros $ZERO_COUNT \
            --timeout 600 > logs/validation.log 2>&1
      - name: Upload validation logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: validation-logs
          path: logs/validation.log
      - name: Archive validation results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: validation-results
          path: data/validation_results.csv

  # Job 4: Execute and Convert Notebook
  convert-notebook:
    needs: [setup, validate-data]
    runs-on: ubuntu-latest
    env:
      PRIME_COUNT: 100
      PRIME_POWERS: 5
      ZERO_COUNT: 100
      INTEGRATION_T: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: pip install -r requirements.txt nbconvert
      - name: Execute notebook and convert to HTML
        run: |
          mkdir -p notebooks/output
          # Try to execute and convert notebook, with fallback if execution fails
          jupyter nbconvert --execute --to html notebooks/validation.ipynb --output notebooks/output/validation.html \
            --ExecutePreprocessor.timeout=1800 \
            --ExecutePreprocessor.kernel_name=python3 || \
          jupyter nbconvert --to html notebooks/validation.ipynb --output notebooks/output/validation.html
      - name: Upload notebook HTML
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: notebook-html
          path: notebooks/output/validation.html

  # Job 5: Run Pytest Tests
  run-tests:
    needs: [setup, validate-data]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: pip install -r requirements.txt pytest
      - name: Run pytest
        run: pytest tests/ -v --tb=short

# Optional: Notify on failure (requires setup)
# - name: Notify failure
#   if: failure()
#   run: echo "Validation failed; check logs."