# Proof-check: plantilla robusta para ejecutar verificación formal en una imagen reproducible (Docker)
# Por defecto usa COQ_IMAGE (recomiendo una imagen de Coq Platform). Ajusta según tus necesidades.
name: Proof Check
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  COQ_IMAGE: coqorg/coq:latest  # Cambia a una imagen de Coq Platform si la necesitas (p.ej. coqorg/coq-platform:YYYY.MM)

jobs:
  check-proofs:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure Docker available
        uses: docker/setup-buildx-action@v2

      - name: Run proof build inside Docker (Coq)
        run: |
          set -euo pipefail
          echo "Running proof-check inside Docker image: $COQ_IMAGE"
          # Monta el repositorio en /work y ejecuta el target 'proof' si existe.
          if [ -f Makefile ]; then
            echo "Makefile found. Attempting 'make proof' or 'make'."
            if make -n proof >/dev/null 2>&1; then
              docker run --rm -v "$PWD":/work -w /work $COQ_IMAGE /bin/bash -lc "make proof"
            else
              docker run --rm -v "$PWD":/work -w /work $COQ_IMAGE /bin/bash -lc "make"
            fi
          else
            # Intentos razonables: coq_makefile or lean/isabelle placeholders.
            echo "No Makefile detected. Trying coq_makefile/_CoqProject conventions."
            docker run --rm -v "$PWD":/work -w /work $COQ_IMAGE /bin/bash -lc "\
              if [ -f _CoqProject ]; then \
                coq_makefile -f _CoqProject -o Makefile.coq || true; \
                if [ -f Makefile.coq ]; then make -f Makefile.coq; fi; \
              else \
                echo 'No _CoqProject or Makefile. Please provide a Makefile with a \`proof\` target or set COQ_IMAGE to an image with your toolchain.'; \
                exit 0; \
              fi"
          fi

      - name: Upload proof logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: proof-logs
          path: |
            proof-logs/**
            _CoqProject
            Makefile*
            logs/**

      - name: Proof-check summary
        if: always()
        run: |
          echo "Proof-check job finished. If failed, inspect artifacts and logs."
