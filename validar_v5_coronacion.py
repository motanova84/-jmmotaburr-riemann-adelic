#!/usr/bin/env python3
"""
Validador V5 Coronaci√≥n ‚Äî Marco de Validaci√≥n de la Hip√≥tesis de Riemann
========================================================================

Este script proporciona una interfaz en espa√±ol para la validaci√≥n completa 
del marco de la Hip√≥tesis de Riemann basado en sistemas ad√©licos S-finitos.

DESCRIPCI√ìN:
    Valida la demostraci√≥n completa "V5 Coronaci√≥n" de la Hip√≥tesis de Riemann
    mediante el marco de verificaci√≥n integral de 5 pasos desarrollado por
    Jos√© Manuel Mota Burruezo.

FUNCIONALIDADES:
    1. Paso 1: Verificaci√≥n Axiomas ‚Üí Lemas  
    2. Paso 2: Derivaci√≥n doble de rigidez arquimediana
    3. Paso 3: Identificaci√≥n de unicidad Paley-Wiener
    4. Paso 4: Localizaci√≥n de ceros (de Branges + Weil-Guinand)
    5. Paso 5: Integraci√≥n completa de coronaci√≥n

USO:
    python validar_v5_coronacion.py [opciones]
    
OPCIONES:
    --precision DIGITOS    Precisi√≥n decimal para c√°lculos (por defecto: 30)
    --verbose             Mostrar informaci√≥n detallada del progreso
    --save-certificate    Guardar certificado matem√°tico de prueba
    --help                Mostrar esta ayuda

EJEMPLOS:
    python validar_v5_coronacion.py                      # Validaci√≥n est√°ndar
    python validar_v5_coronacion.py --precision 50       # Alta precisi√≥n
    python validar_v5_coronacion.py --verbose            # Salida detallada
    python validar_v5_coronacion.py --save-certificate   # Guardar certificado

MODOS DE VALIDACI√ìN:
    - Modo Ligero: Dataset m√≠nimo (zeros_t1e3.txt, ~2-5 min)
    - Modo Completo: Dataset completo (zeros_t1e8.txt, ~horas)

AUTOR: Jos√© Manuel Mota Burruezo
VERSI√ìN: V5 Coronaci√≥n Final
LICENCIA: MIT (c√≥digo), CC-BY 4.0 (manuscrito)
"""

import argparse
import subprocess
import sys
import os

def mostrar_ayuda_espanol():
    """Mostrar ayuda en espa√±ol antes de reenviar al script principal"""
    print(__doc__)
    print("\n" + "="*80)
    print("üöÄ VALIDADOR V5 CORONACI√ìN - HIP√ìTESIS DE RIEMANN")
    print("="*80)
    print("\nEste script valida la demostraci√≥n completa de la Hip√≥tesis de Riemann")
    print("usando el marco de sistemas ad√©licos S-finitos desarrollado por")
    print("Jos√© Manuel Mota Burruezo.\n")
    
    print("üìã ESTRUCTURA DE VALIDACI√ìN:")
    print("   ‚úì Paso 1: Axiomas ‚Üí Lemas comprobados")
    print("   ‚úì Paso 2: Rigidez arquimediana (derivaci√≥n doble)")  
    print("   ‚úì Paso 3: Unicidad Paley-Wiener D(s) ‚â° Œû(s)")
    print("   ‚úì Paso 4A: Localizaci√≥n de Branges")
    print("   ‚úì Paso 4B: Localizaci√≥n Weil-Guinand")
    print("   ‚úì Paso 5: Integraci√≥n completa coronaci√≥n\n")
    
    print("üî¨ PRUEBAS DE ESTR√âS:")
    print("   ‚Ä¢ Perturbaci√≥n de medida espectral")
    print("   ‚Ä¢ Validaci√≥n de l√≠mites de crecimiento")
    print("   ‚Ä¢ Consistencia de subconjuntos de ceros")
    print("   ‚Ä¢ Generaci√≥n de certificado matem√°tico\n")
    
    print("üîó PRUEBAS DE INTEGRACI√ìN:")
    print("   ‚Ä¢ Integraci√≥n con f√≥rmula expl√≠cita de Weil")
    print("   ‚Ä¢ Verificaci√≥n de l√≠nea cr√≠tica\n")

def main():
    """Punto de entrada principal con manejo en espa√±ol"""
    # Si se solicita ayuda, mostrar en espa√±ol
    if len(sys.argv) > 1 and sys.argv[1] in ['-h', '--help', '--ayuda', 'ayuda']:
        mostrar_ayuda_espanol()
        return
    
    # Ruta al script real
    target = os.path.join(os.path.dirname(__file__), "validate_v5_coronacion.py")
    
    if not os.path.exists(target):
        print("‚ùå ERROR: No se pudo encontrar validate_v5_coronacion.py")
        print("   Aseg√∫rese de que el archivo existe en el mismo directorio.")
        sys.exit(1)
    
    try:
        # Reenviar todos los argumentos y salir con el mismo c√≥digo
        print("üîÑ Iniciando validaci√≥n V5 Coronaci√≥n...")
        print("   Redirigiendo a validate_v5_coronacion.py...\n")
        exit_code = subprocess.call([sys.executable, target] + sys.argv[1:])
        
        if exit_code == 0:
            print("\nüéâ ¬°Validaci√≥n V5 Coronaci√≥n completada exitosamente!")
        else:
            print(f"\n‚ùå Error durante la validaci√≥n (c√≥digo: {exit_code})")
            
        sys.exit(exit_code)
        
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  Validaci√≥n interrumpida por el usuario")
        sys.exit(130)
    except Exception as e:
        print(f"\n‚ùå ERROR INESPERADO: {e}")
        print("   Por favor, reporte este error al desarrollador.")
        sys.exit(1)

if __name__ == '__main__':
    main()